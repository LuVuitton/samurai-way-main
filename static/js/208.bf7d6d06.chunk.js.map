{"version":3,"file":"static/js/208.bf7d6d06.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/UsersList.module.css?9aef","components/Users/User.tsx","components/Users/UsersList.tsx","components/Users/UsersListClass.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainWrapper\":\"UsersList_mainWrapper__NbRnK\",\"itemWrapper\":\"UsersList_itemWrapper__VYVru\",\"avatar\":\"UsersList_avatar__ePOck\",\"subscription\":\"UsersList_subscription__87UrZ\",\"city\":\"UsersList_city__Uz0th\",\"country\":\"UsersList_country__zh4ja\",\"userName\":\"UsersList_userName__eWm-m\",\"subscriptionActive\":\"UsersList_subscriptionActive__8CDS3\",\"showMoreB\":\"UsersList_showMoreB__IN1PU\"};","import sUsList from \"./UsersList.module.css\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport type UserPropsType = {\n    photos: { small: string | null; large: string | null; }\n    followed: boolean\n    name: string\n    status: string | null\n    userID: number\n    usersAreLoading: number[]\n    onFollowTC: (userID: number) => void\n    onUnfollowTC: (userID: number) => void\n}\n\n\nexport const User = ({\n                         photos,\n                         followed,\n                         name,\n                         status,\n                         userID,\n                         usersAreLoading,\n                         onFollowTC,\n                         onUnfollowTC\n                     }: UserPropsType) => {\n\n    const onFollowHandler = () => {\n        onFollowTC(userID)\n    }\n\n    const onUnfollowHandler = () => {\n        onUnfollowTC(userID)\n    }\n\n\n    return (\n        <>\n            <div className={sUsList.itemWrapper}>\n                <div>\n                    <NavLink to={`/profile/${userID}`}>\n                        <img\n                            className={sUsList.avatar}\n                            alt={'avatar'}\n                            src={\n                                photos?.small\n                                    ? photos.small\n                                    : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJbd87QavjazVx5tJ9sLdp_p2oqfGoN1KUjw&usqp=CAU'\n                            }\n                        ></img>\n                    </NavLink>\n                    <button\n                        disabled={usersAreLoading.some(e => e === userID)}\n                        className={followed ? sUsList.subscriptionActive : sUsList.subscription}\n                        onClick={followed ? onUnfollowHandler : onFollowHandler}\n                    >\n                        {followed ? 'unfollow' : 'follow'}\n                    </button>\n                </div>\n                <div>\n                    <div className={sUsList.userName}>{name}</div>\n                    <div className={sUsList.description}>{status}</div>\n                </div>\n            </div>\n        </>\n    );\n};","import sUsList from \"./UsersList.module.css\";\nimport React from \"react\";\nimport {User} from \"./User\";\nimport {OneUserType} from \"../../Redux/Reducers/UsersReducer\";\n\nexport type UsersListPropsType = {\n    arr: OneUserType[]\n    totalUsers: number\n    showMore: () => void\n    isLoading: boolean\n    setIsLoadingAC: (isLoading: boolean) => void\n    usersAreLoading: number[]\n    onFollowTC:(userID:number)=>void\n    onUnfollowTC:(userID:number)=>void\n}\n\n\nexport const UsersList = (props: UsersListPropsType) => {\n\n\n    const mappedUsers = props.arr.map((e, i) => {\n        return <User\n            userID={e.id}\n            key={i}\n            name={e.name}\n            status={e.status}\n            followed={e.followed}\n            photos={e.photos}\n            usersAreLoading={props.usersAreLoading}\n            onFollowTC={props.onFollowTC}\n            onUnfollowTC={props.onUnfollowTC}\n        />\n    })\n\n    return (\n        <div className={sUsList.mainWrapper}>\n            <div>{props.totalUsers}</div>\n            {mappedUsers}\n            <div>{props.arr.length} users displayed</div>\n            <button disabled={props.isLoading} className={sUsList.showMoreB} onClick={props.showMore}>SHOW MORE</button>\n        </div>\n    )\n}\n\n","import {connect} from \"react-redux\";\nimport {RootStateType} from \"../../Redux/Store\";\nimport {clearUsersState, getUsersTC, onFollowTC, onUnfollowTC, showMoreAC} from \"../../Redux/Reducers/UsersReducer\";\nimport {setIsLoadingAC} from \"../../Redux/Reducers/appReducer\";\nimport {AppDispatchType} from \"../../customHooks/useCustomDispatch\";\nimport React from \"react\";\nimport {UsersList} from \"./UsersList\";\nimport {Preloader} from \"../Other/Preloader\";\nimport {OneUserType} from \"../../Redux/Reducers/UsersReducer\";\nimport {compose} from \"redux\";\nimport {withAuthRedirectHOC} from \"../../customHOKs/wihtAuthRedirectHOK\";\n\n\nclass UsersClass extends React.Component<UsersClassPropsType> {\n\n    componentDidMount() {\n        this.props.getUsersTC(this.props.pageNumber);\n    }\n\n    showMore = () => {\n        this.props.showMoreAC();\n        this.props.getUsersTC(this.props.pageNumber);\n    }\n\n    componentWillUnmount() {\n        this.props.clearUsersState();\n    }\n\n    render() {\n        return (\n            <>\n                {!this.props.usersReceivedStatus\n                    ? <Preloader/>\n                    : <UsersList\n                        showMore={this.showMore}\n                        totalUsers={this.props.totalUsers}\n                        arr={this.props.arr}\n                        isLoading={this.props.isLoading}\n                        setIsLoadingAC={this.props.setIsLoadingAC}\n                        usersAreLoading={this.props.usersAreLoading}\n                        onFollowTC={this.props.onFollowTC}\n                        onUnfollowTC={this.props.onUnfollowTC}\n                    />\n                }\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: RootStateType) => {\n    return {\n        pageNumber: state.users.pageNumbers,\n        arr: state.users.users,\n        totalUsers: state.users.totalUsers,\n        usersReceivedStatus: state.users.usersReceivedStatus,\n        isLoading: state.app.isLoading,\n        usersAreLoading: state.users.usersAreLoading\n    }\n}\nconst mapDispatchToProps = (dispatch: AppDispatchType) => {\n    return {\n        showMoreAC: () => dispatch(showMoreAC()),\n        clearUsersState: () => dispatch(clearUsersState()),\n        setIsLoadingAC: (isLoading: boolean) => dispatch(setIsLoadingAC(isLoading)),\n        getUsersTC: (pageNumber: number) => dispatch(getUsersTC(pageNumber)),\n        onFollowTC: (userID: number) => dispatch(onFollowTC(userID)),\n        onUnfollowTC: (userID: number) => dispatch(onUnfollowTC(userID))\n    }\n}\n\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UsersClass);\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirectHOC\n)(UsersClass)\n\n\n\n\n\n\n\ntype UsersClassPropsType = MapDispatchPropsType & MapStatePropsType\n\nexport type MapStatePropsType = {\n    arr: OneUserType[];\n    pageNumber: number;\n    usersReceivedStatus: boolean;\n    totalUsers: number;\n    isLoading: boolean;\n    usersAreLoading: number[];\n}\n\ntype MapDispatchPropsType = {\n    showMoreAC: () => void;\n    clearUsersState: () => void;\n    setIsLoadingAC: (isLoading: boolean) => void;\n    getUsersTC: (pageNumber: number) => void;\n    onFollowTC: (userID: number) => void;\n    onUnfollowTC: (userID: number) => void;\n}"],"names":["User","photos","followed","name","status","userID","usersAreLoading","onFollowTC","onUnfollowTC","className","sUsList","to","alt","src","small","disabled","some","e","onClick","UsersList","props","mappedUsers","arr","map","i","id","totalUsers","length","isLoading","showMore","UsersClass","showMoreAC","getUsersTC","pageNumber","this","clearUsersState","usersReceivedStatus","setIsLoadingAC","Preloader","React","compose","connect","state","users","pageNumbers","app","dispatch","withAuthRedirectHOC"],"sourceRoot":""}